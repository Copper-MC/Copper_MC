// Generated by Haxe 4.3.1
#ifndef INCLUDED_handle_OfflinePingPong
#define INCLUDED_handle_OfflinePingPong

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(handle,OfflinePingPong)
HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(sys,net,Address)
HX_DECLARE_CLASS2(sys,net,Socket)
HX_DECLARE_CLASS2(sys,net,UdpSocket)

namespace handle{


class HXCPP_CLASS_ATTRIBUTES OfflinePingPong_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef OfflinePingPong_obj OBJ_;
		OfflinePingPong_obj();

	public:
		enum { _hx_ClassId = 0x3310e261 };

		void __construct( ::haxe::io::Bytes buf, ::sys::net::Address add, ::sys::net::UdpSocket socket);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="handle.OfflinePingPong")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"handle.OfflinePingPong"); }
		static ::hx::ObjectPtr< OfflinePingPong_obj > __new( ::haxe::io::Bytes buf, ::sys::net::Address add, ::sys::net::UdpSocket socket);
		static ::hx::ObjectPtr< OfflinePingPong_obj > __alloc(::hx::Ctx *_hx_ctx, ::haxe::io::Bytes buf, ::sys::net::Address add, ::sys::net::UdpSocket socket);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OfflinePingPong_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OfflinePingPong",6d,2d,70,33); }

		 ::haxe::io::Bytes buf;
		 ::sys::net::Address add;
		 ::sys::net::UdpSocket socket;
		void Offline_Ping();
		::Dynamic Offline_Ping_dyn();

};

} // end namespace handle

#endif /* INCLUDED_handle_OfflinePingPong */ 
