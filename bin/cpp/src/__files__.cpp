// Generated by Haxe 4.3.1
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"?",
"E:\\New folder (9)\\haxe\\std/cpp/_std/Reflect.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/Std.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/StringBuf.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/haxe/Exception.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/haxe/Log.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/haxe/NativeStackTrace.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/sys/net/Host.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/sys/net/Socket.hx",
"E:\\New folder (9)\\haxe\\std/cpp/_std/sys/net/UdpSocket.hx",
"E:\\New folder (9)\\haxe\\std/haxe/ValueException.hx",
"E:\\New folder (9)\\haxe\\std/haxe/exceptions/NotImplementedException.hx",
"E:\\New folder (9)\\haxe\\std/haxe/exceptions/PosException.hx",
"E:\\New folder (9)\\haxe\\std/haxe/io/Bytes.hx",
"E:\\New folder (9)\\haxe\\std/haxe/io/BytesBuffer.hx",
"E:\\New folder (9)\\haxe\\std/haxe/io/BytesInput.hx",
"E:\\New folder (9)\\haxe\\std/haxe/io/BytesOutput.hx",
"E:\\New folder (9)\\haxe\\std/haxe/io/Eof.hx",
"E:\\New folder (9)\\haxe\\std/haxe/io/Input.hx",
"E:\\New folder (9)\\haxe\\std/haxe/io/Output.hx",
"E:\\New folder (9)\\haxe\\std/haxe/iterators/ArrayIterator.hx",
"E:\\New folder (9)\\haxe\\std/sys/net/Address.hx",
"Main.hx",
"Server.hx",
"handle/OfflinePingPong.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"c:\\Users\\Kavosh\\Desktop\\src\\?",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\Reflect.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\Std.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\StringBuf.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\haxe\\Exception.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\haxe\\Log.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\haxe\\NativeStackTrace.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\sys\\net\\Host.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\sys\\net\\Socket.hx",
"E:\\New folder (9)\\haxe\\std\\cpp\\_std\\sys\\net\\UdpSocket.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\ValueException.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\exceptions\\NotImplementedException.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\exceptions\\PosException.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\io\\Bytes.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\io\\BytesBuffer.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\io\\BytesInput.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\io\\BytesOutput.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\io\\Eof.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\io\\Input.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\io\\Output.hx",
"E:\\New folder (9)\\haxe\\std\\haxe\\iterators\\ArrayIterator.hx",
"E:\\New folder (9)\\haxe\\std\\sys\\net\\Address.hx",
"c:\\Users\\Kavosh\\Desktop\\src\\src\\Main.hx",
"c:\\Users\\Kavosh\\Desktop\\src\\src\\Server.hx",
"c:\\Users\\Kavosh\\Desktop\\src\\src\\handle\\OfflinePingPong.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"Main",
"Reflect",
"Std",
"StringBuf",
"handle.OfflinePingPong",
"haxe.Exception",
"haxe.Log",
"haxe.NativeStackTrace",
"haxe.ValueException",
"haxe.exceptions.PosException",
"haxe.exceptions.NotImplementedException",
"haxe.io.Bytes",
"haxe.io.BytesBuffer",
"haxe.io.Input",
"haxe.io.BytesInput",
"haxe.io.Output",
"haxe.io.BytesOutput",
"haxe.io.Eof",
"haxe.iterators.ArrayIterator",
"src.Server",
"sys.net.Address",
"sys.net.Host",
"sys.net._Socket.SocketInput",
"sys.net._Socket.SocketOutput",
"sys.net.Socket",
"sys.net.UdpSocket",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(::hx::__hxcpp_all_classes, ::hx::__hxcpp_all_files_fullpath); }
